name: build

on:
  push:
    branches:
      - main
    tags:
      - v*.*.*

  pull_request:

jobs:
  build-other:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/aceforeverd/hybridsql-base:0.4.0

    steps:
      - uses: actions/checkout@v2

      - name: Cache Source
        id: cache-source
        uses: actions/cache@v2
        with:
          path: |
            src/*.tar.*
            src/*.zip
          key: ${{ hashFiles('**/CMakeLists.txt', 'fetch_resource.sh') }}

      - name: download
        if: steps.cache-source.outputs.cache-hit != 'true'
        run: |
          ./fetch_resource.sh

      - name: build
        run: |
          ./pack_other.sh

      - name: Upload Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          path: |
            libother-*.tar.gz
            src/apache-zookeeper-*.tar.gz

  build-other-mac:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache Source
        id: cache-source
        uses: actions/cache@v2
        with:
          path: |
            src/*.tar.*
            src/*.zip
          key: ${{ hashFiles('**/CMakeLists.txt', 'fetch_resource.sh') }}

      - name: Xcode Select
        # You may pin to the exact commit or the version.
        # uses: devbotsxyz/xcode-select@05f94658217eb8575f0aabd3b95e702a47995d21
        uses: devbotsxyz/xcode-select@v1.1.0
        with:
          # Version to use (like '11.7', '12' or simply 'latest'), set lower than 12.1.1 to use SDK macosx10.15
          version: 12.1.1
          # Whether to select a beta release or not. Beta releases may not always be available.

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: '3.20.x'

      - name: Install System Dependencies
      # coreutils for nproc
      # gnu-getopt for brpc
        run: |
          brew install automake
          brew install coreutils
          brew install gnu-getopt

      - name: download
        if: steps.cache-source.outputs.cache-hit != 'true'
        run: |
          ./fetch_resource.sh

      - name: build
        run: |
          getopt -V
          echo 'export PATH="/usr/local/opt/gnu-getopt/bin:$PATH"' >> ~/.bash_profile
          source ~/.bash_profile
          getopt -V
          ./pack_other.sh

      - name: Upload Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          name: artifact-mac
          path: |
            libother-*.tar.gz
            src/apache-zookeeper-*.tar.gz

  build-llvm:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/aceforeverd/hybridsql-base:0.4.0
    steps:
      - uses: actions/checkout@v2

      - name: Cache Source
        id: cache-source
        uses: actions/cache@v2
        with:
          path: |
            src/*.tar.*
            src/*.zip
          key: ${{ hashFiles('**/CMakeLists.txt', 'fetch_resource.sh') }}

      - name: download
        if: steps.cache-source.outputs.cache-hit != 'true'
        run: |
          ./fetch_resource.sh

      - name: build llvm
        run: |
          ./pack_llvm.sh

      - name: Upload Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          path: llvm-*.tar.gz

  build-llvm-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache Source
        id: cache-source
        uses: actions/cache@v2
        with:
          path: |
            src/*.tar.*
            src/*.zip
          key: ${{ hashFiles('**/CMakeLists.txt', 'fetch_resource.sh') }}

      - name: Xcode Select
        uses: devbotsxyz/xcode-select@v1.1.0
        with:
          version: 12.1.1

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: '3.20.x'

      - name: Install System Dependencies
      # coreutils for nproc
        run: |
          brew install coreutils

      - name: download
        if: steps.cache-source.outputs.cache-hit != 'true'
        run: |
          ./fetch_resource.sh

      - name: build llvm
        run: |
          ./pack_llvm.sh

      - name: Upload Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          name: artifact-mac
          path: llvm-*.tar.gz


  build-boost:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/aceforeverd/hybridsql-base:0.4.0
    steps:
      - uses: actions/checkout@v2

      - name: Cache Source
        id: cache-source
        uses: actions/cache@v2
        with:
          path: |
            src/*.tar.*
            src/*.zip
          key: ${{ hashFiles('**/CMakeLists.txt', 'fetch_resource.sh') }}

      - name: download
        if: steps.cache-source.outputs.cache-hit != 'true'
        run: |
          ./fetch_resource.sh

      - name: build boost
        run: |
          ./pack_boost.sh

      - name: Upload Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          path: boost-*.tar.gz

  build-boost-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache Source
        id: cache-source
        uses: actions/cache@v2
        with:
          path: |
            src/*.tar.*
            src/*.zip
          key: ${{ hashFiles('**/CMakeLists.txt', 'fetch_resource.sh') }}

      - name: Xcode Select
        uses: devbotsxyz/xcode-select@v1.1.0
        with:
          version: 12.1.1

      - name: Install System Dependencies
      # coreutils for nproc
        run: |
          brew install coreutils

      - name: download
        if: steps.cache-source.outputs.cache-hit != 'true'
        run: |
          ./fetch_resource.sh

      - name: build boost
        run: |
          ./pack_boost.sh

      - name: Upload Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          name: artifact-mac
          path: boost-*.tar.gz

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - build-other
      - build-llvm
      - build-boost
      - build-other-mac
      - build-llvm-mac
      - build-boost-mac
    steps:
      - uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: linux/

      - name: Download Artifacts For Mac
        uses: actions/download-artifact@v2
        with:
          name: artifact-mac
          path: darwin/

      - name: Pack All Linux
        run: |
          ./pack_all.sh linux

      - name: Pack All For Mac
        run: |
          ./pack_all.sh darwin
        env:
          OS: darwin
          ARCH: x86_64

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            linux/third*.tar.gz
            darwin/thirdparty-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
